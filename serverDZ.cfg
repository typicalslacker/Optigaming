hostname = "ServerName";  // Server name
password = "";              // Password to connect to the server
passwordAdmin = "";         // Password to become a server admin

enableWhitelist = 0;        // Enable/disable whitelist (value 0-1)
 
maxPlayers = 60;            // Maximum amount of players
 
verifySignatures = 2;       // Verifies .pbos against .bisign files. (only 2 is supported)
forceSameBuild = 1;         // When enabled, the server will allow the connection only to clients with same the .exe revision as the server (value 0-1)
 
disableVoN = 0;             // Enable/disable voice over network (value 0-1)
vonCodecQuality = 20;        // Voice over network codec quality, the higher the better (values 0-30)
 
disable3rdPerson=0;         // Toggles the 3rd person view for players (value 0-1)
disableCrosshair=0;         // Toggles the cross-hair (value 0-1)

disablePersonalLight = 0;   // Disables personal light for all clients connected to server
lightingConfig = 0;         // 0 for brighter night setup, 1 for darker night setup
 
serverTime="SystemTime";    // Initial in-game time of the server. "SystemTime" means the local time of the machine. Another possibility is to set the time to some value in "YYYY/MM/DD/HH/MM" format, f.e. "2015/4/8/17/23" .
serverTimeAcceleration=4;  // Accelerated Time (value 0-24)// This is a time multiplier for in-game time. In this case, the time would move 24 times faster than normal, so an entire day would pass in one hour.
serverNightTimeAcceleration=0;  // Accelerated Nigh Time - The numerical value being a multiplier (0.1-64) and also multiplied by serverTimeAcceleration value. Thus, in case it is set to 4 and serverTimeAcceleration is set to 2, night time would move 8 times faster than normal. An entire night would pass in 3 hours.
serverTimePersistent=0;     // Persistent Time (value 0-1)// The actual server time is saved to storage, so when active, the next server start will use the saved time value.
 
guaranteedUpdates=1;        // Communication protocol used with game server (use only number 1)
 
loginQueueConcurrentPlayers=5;  // The number of players concurrently processed during the login process. Should prevent massive performance drop during connection when a lot of people are connecting at the same time.
loginQueueMaxPlayers=500;       // The maximum number of players that can wait in login queue
 
instanceId = 1;             // DayZ server instance id, to identify the number of instances per box and their storage folders with persistence files

storeHouseStateDisabled = false;// Disable houses/doors persistence (value true/false), usable in case of problems with persistence
storageAutoFix = 1;         // Checks if the persistence files are corrupted and replaces corrupted ones with empty ones (value 0-1)

 
class Missions
{
    class DayZ
    {
        template="dayzOffline.chernarusplus"; // Mission to load on server startup. <MissionName>.<TerrainName>
					      // Vanilla mission: dayzOffline.chernarusplus
					      // DLC mission: dayzOffline.enoch
    };
};

respawnTime = 15;            // Sets the respawn delay (in seconds) before the player is able to get a new character on the server, when the previous one is dead
 
motd[] = {"message","message"}; // Message of the day displayed in the in-game chat
motdInterval = 1;           // Time interval (in seconds) between each message
 
maxPing= 225;               // Max ping value until server kick the user (value in milliseconds)
 
timeStampFormat = "Short";  // Format for timestamps in the .rpt file (value Full/Short)
logAverageFps = 1;          // Logs the average server FPS (value in seconds), needs to have ''-dologs'' launch parameter active
logMemory = 1;              // Logs the server memory usage (value in seconds), needs to have the ''-dologs'' launch parameter active
logPlayers = 1;             // Logs the count of currently connected players (value in seconds), needs to have the ''-dologs'' launch parameter active
logFile = "server_console.log";// Saves the server console log to a file in the folder with the other server logs
 
enableDebugMonitor = 0;     //shows info about the character using a debug window in a corner of the screen (value 0-1)

steamQueryPort = 2302;      // defines Steam query port, should fix the issue with server not being visible in client server browser

allowFilePatching = 0;      // if set to 1 it will enable connection of clients with "-filepatching" launch parameter enabled

simulatedPlayersBatch = 20;    // Set limit of how much players can be simulated per frame (for server performance gain)

multithreadedReplication = 1; // enables multithreaded processing of server's replication system - number of worker threads is derived by settings of jobsystem in dayzsettings.xml by "maxcores" and "reservedcores" parameters (value 0-1)